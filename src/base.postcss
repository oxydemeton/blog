*, *::after, *::before {
    box-sizing: inherit;
    scroll-behavior: inherit;
    text-underline-offset: inherit;
    text-decoration-thickness: inherit;
}
:root {
    box-sizing: border-box;
    scroll-behavior: smooth;
    text-underline-offset: .2ch;
    text-decoration-thickness: .15ch;
    scroll-padding-top: theme(scrollPadding.2);
}
body {
    font-size: var(--ft-size-nm);
    line-height: 1.5em;
}
h1 {
    font-size: var(--ft-size-4xl);
    font-weight: theme(fontWeight.black);
}
h2 {
    font-size: var(--ft-size-3xl);
    font-weight: theme(fontWeight.extrabold);
}
h3 {
    font-size: var(--ft-size-2xl);
    font-weight: theme(fontWeight.extrabold);
}
h4 {
    font-size: var(--ft-size-xl);
    font-weight: theme(fontWeight.bold);
}
h5 {
    font-size: var(--ft-size-lg);
    font-weight: theme(fontWeight.bold);
}
h6 {
    font-size: var(--ft-size-md);
    font-weight: theme(fontWeight.medium);
}

a {
    all: unset;
    color: inherit;
    text-decoration: underline;
    cursor: pointer;
}
a:hover, a:focus-visible, a:active {
    font-style: italic;
}

h1, h2, h3, h4 {
    margin-inline: 0;
    margin-block: 1em;
    line-height: 1;
}
h5, h6 {
    margin: 0;
    margin-block: .5em;
    line-height: 1;
}
blockquote {
    margin-block: 1em;
    margin-inline: 2em;
    padding-inline-start: 1ch;
    border-inline-start: .2ch solid black;
}
b {
    font-weight: theme(fontWeight.bold);
}
i {
    font-style: italic;
}
u {
    text-decoration-style: underline;
    
}
em {
    font-style: italic;
}
strong {
    font-weight: theme(fontWeight.extrabold);
}
q {
    display: inline;
}
q::before {
    content: open-quote;
}
q::after {
    content: close-quote;
}
textarea {
    writing-mode: horizontal-tb !important;
    font-weight: normal;
    text-rendering: auto;
    letter-spacing: normal;
    word-spacing: normal;
    line-height: normal;
    text-transform: none;
    text-indent: 0px;
    display: inline-block;
    text-align: start;
    appearance: auto;
    -webkit-rtl-ordering: logical;
    resize: none;
    cursor: text;
    white-space: pre-wrap;
    overflow-wrap: break-word;
    background-color: inherit;
    column-count: initial !important;
    margin: 0;
    border-width: 2px;
    border-style: solid;
    border-color: black;
    border-image: initial;
    border-radius: 1%;
    padding: .1em;
    outline: none;
}
textarea:focus, textarea:active {
    outline: none;
}
textarea:focus-visible {
    outline: 1px solid black;
}

input:where(:hover, :focus, :active) {
    outline: none;
}
input:where([type=text], [type=email], [type=tel], [type=search],
[type=password], [type=number], [type=color],
[type=date], [type=datetime], [type=datetime-local],
[type=month], [type=week], [type=time]) {
    outline: none;
    border: 1px solid black;
    border-radius: 4px;
    cursor: text;
}
input:where([type=file], [type=radio], [type=color], [type=checkbox]) {
    cursor: pointer;
}
input[type=range] {
    cursor: e-resize;
}


button,
input:where([type="button"],[type=submit],[type=reset]) {
    padding: 0;
    margin: 0;
    padding-inline: .5ch;
    border: none;
    outline: none;
    text-decoration: underline;
    background: none;
    cursor: pointer;
    color: inherit;
    display: inline;
}
:where(button, input:where(
    [type=button], [type=submit], input[type=reset]
)):is(:hover, :focus-visible, :active) {
    outline: 2px solid black;
    border-radius: 0.25rem;
}
:where(button, input:is([type="button"],[type=submit],[type=reset])):disabled {
    cursor: not-allowed;
    outline: none;
}

thead {
    text-decoration: underline;
}
th {
    font-weight: theme(fontWeight.bold);;
    text-align: center;
}
td {
    font-weight: theme(fontWeight.normal);

}
th, td{
    padding: .25em;
    border-color: black;
    border-bottom: .1rem solid;
    text-align: center;
}
tr:last-of-type :is(th, td)  {
    border-bottom: none;
}
tr > :first-child:not([colspan])  {
    text-align: start;
}
@supports(border-block: inherit) {
    th, td{
        border-bottom: 0;
        border-block-end: .1rem solid;
    }
}

details > summary:first-of-type {
    display: list-item;
    counter-increment: list-item 0;
    list-style: inside disclosure-closed;
    cursor: pointer;
}

summary::marker {
    font-family: Arial, sans-serif;
    content: '▶';
    width: 1.5ch;
    height: 1.5ch;
}
details[open] summary:first-of-type::marker {
    content: '▼';
}

abbr {
    color: darkgray;
    font-style: italic;
    text-decoration: underline .15ch dashed gray;
    text-transform: uppercase;
}

dfn {
    text-decoration: none;
    font-style: inherit;
    font-weight: theme(fontWeight.medium);;
}

dt::after {
    content: ':';
}

:where(dd) {
    margin-inline: 2em;
    padding-inline-start: .5ch;
    border-inline-start: .25ch solid black;
}

pre {
    font-family: monospace;
}
code,
code :is(pre) {
    font-family: 'JetBrainsMono', monospace, system-ui;
    font-weight: theme(fontWeight.thin);
}
var {
    font-weight: theme(fontWeight.medium);;
    font-style: italic;
    user-select: all;
}
kbd {
    background-color: rgb(190, 190, 190);
    padding-inline: .5ch;
    border-radius: 4px;
    user-select: all;
    font-family: 'JetBrainsMono', monospace, system-ui;
    font-weight: theme(fontWeight.thin);
}
samp {
    font-weight: theme(fontWeight.thin);
    font-family: monospace;
}

select,
select option {
    font-size: var(--ft-size-nm);
}
select {
    border: none;
    outline: 2px solid gray;
    border-radius: 4px;
}
select:focus,
select:hover {
    outline: 2px solid black;
}
@keyframes target_color_fade {
	from { color: red; }
	to { color: inherit; }
}
:target {
    color:red;
    animation: target_color_fade 1.5s forwards alternate;
    animation-delay: 0.5s;
}

noscript {
    font-size: var(--ft-size-xl);
    font-weight: theme(fontWeight.bold);
    color: black;
    background-color: white;
    margin: 1rem;
    display: block;
}